version: '3'

services:
  db_post:
    container_name: postgres_db_posts
    image: postgres:13
    ports:
      - 5431:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data

  api_post:
    container_name: spring_api_posts
    build:
      context: jibjab_posts
      dockerfile: Dockerfile.multi
    ports:
      - 8081:8080
    environment:
      DB_USER: postgres
      DB_PASSWORD: 1234
      DB_NAME: postgres
      DB_HOST: postgres_db_posts
      DB_PORT: 5432

  db_user:
    container_name: postgres_db_users
    image: postgres:13
    ports:
      - 5435:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data

  api_user:
    container_name: spring_api_users
    build:
      context: jibjab_users
      dockerfile: Dockerfile.multi
    ports:
      - 8080:8080
    environment:
      DB_USER: postgres
      DB_PASSWORD: 1234
      DB_NAME: postgres
      DB_HOST: postgres_db_users
      DB_PORT: 5435
      JJ_SECRET: secret_key
      JJ_EXPIRATION: 1000000000

  db_message:
    container_name: postgresdbmessages
    image: postgres:13.3-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: postgres
    volumes:
      - messages_data:/var/lib/postgresql/data

  api_message:
    container_name: jibjabmessage
    depends_on: [db_message]
    image: docker.pkg.github.com/jibber-jabber-inc/jib-jab-api-messages/jibjab_messages-develop:latest
    environment:
      DB_USER: postgres
      DB_PASSWORD: 1234
      DB_NAME: postgres
      DB_HOST: postgresdbmessages
      DB_PORT: 5432
      AUTH_PORT: 8080
      AUTH_HOST: jibjabuser
      CLIENT_URL: "http://jibjabclient:80"

  client:
    container_name: jibjabclient
    image: docker.pkg.github.com/jibber-jabber-inc/jib-jab-client/jibjab_client-develop:latest

  revproxy:
    build:
      context: .
      dockerfile: Dockerfile.proxy
    ports:
      - 3000:80

volumes:
  posts_data:
  users_data:
